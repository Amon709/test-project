# Исключения - try и except


# Исключения - это специальные объекты, которые могут возникнуть при выполнении кода
# Исключения используются для обработки ошибок
# Когда возникает исключение, программа прерывается и выводится сообщение об ошибке
# Для обработки исключений используются блоки try и except


# Примеры встроенных исключений в Python

# ZeroDivisionError - это исключение, которое возникает при делении на ноль
# TypeError - это исключение, которое возникает при неправильном использовании типов данных
# ValueError - это исключение, которое возникает при использовании значения правильного типа, но неподходящего
# NameError - это исключение, которое возникает при отсутствии переменных в коде
# IndexError - это исключение, которое возникает при неверном использовании индексов в списке
# KeyError - это исключение, которое возникает при отсутствии ключа в словаре


# Синтаксис исключений в Python

# try:
#     ...
# except <exception>:
#     ...


# Примеры использования исключений в Python

# Обработка одиночного исключения

try:
    division_result = 1 / 0
    print(division_result)
except ZeroDivisionError:
    print("Ошибка деления на ноль!")


# Обработка нескольких исключений

try:
    division_result = "1" / 0
except ZeroDivisionError:
    print("Ошибка деления на ноль!")
except TypeError:
    print("Неправильное использование типов данных!")


# Сохранение исключения в переменной

try:
    division_result = 1 / 0
except ZeroDivisionError as zde:
    print(f"Ошибка деления на ноль: {zde}")
except TypeError as te:
    print(f"Неправильное использование типов данных: {te}")


# Обработка неизвестных исключений

try:
    large_number = 10 ** 1000
    division_result = large_number * 10 / 1
except ZeroDivisionError:
    print("Ошибка деления на ноль!")
except TypeError:
    print("Неправильное использование типов данных!")
except Exception as ex:
    print(f"Неизвестное исключение: {ex}")
